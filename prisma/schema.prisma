generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id                   String        @id @default(uuid())
  name                 String
  gender               Gender
  age                  Int
  preferredHand        PreferredHand
  bestAchievement      String
  currentState         CurrentState @default(UNAUCTIONED)
  soldPrice            Int?          // Final price if sold
  soldToCaptainId      String?       // Which captain bought them
  soldToCaptain        Captain?      @relation("SoldPlayers", fields: [soldToCaptainId], references: [id])
  
  auctionSessions      AuctionSession[]
}

model Captain {
  id                   String        @id @default(uuid())
  username             String?       @unique
  name                 String        @unique
  remainingBudget      Int
  
  boughtPlayers        Player[]      @relation("SoldPlayers")
  biddingInSession     AuctionSession?
}

model AuctionSession {
  id                   String        @id @default("singleton")
  currentPlayerId      String?
  currentPlayer        Player?       @relation(fields: [currentPlayerId], references: [id])
  lastBidAt            DateTime?
  bidPrice             Int?          // Optional - no bids initially
  biddingCaptainId     String?       @unique // Foreign key for the captain
  biddingCaptain       Captain?      @relation(fields: [biddingCaptainId], references: [id])
  status               AuctionStatus @default(WAITING)
}

enum Gender {
  MALE
  FEMALE
}

enum PreferredHand {
  RIGHT
  LEFT
}

enum CurrentState {
  UNAUCTIONED
  SOLD
  UNSOLD
}

enum AuctionStatus {
  WAITING
  ACTIVE
  COMPLETED_APPROVAL_PENDING
  COMPLETED
}